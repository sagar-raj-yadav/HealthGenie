(()=>{"use strict";var e={2934:(e,t,r)=>{var o=r(4582),a=r(5635),n=r(7153),l=r(2619),i=r(6882),d=r(1780),s=r(1279),c=r(1177),u=r(721),h=r(7029),g=r(1383),m=r(5250),f=r(2988),y=r(2038),x=r(1880),b=r(4371);const p={waterIntake:[],stepCounts:[],weights:[],bloodPressures:[],heartRates:[],habits:[]},j=(0,a.createContext)(void 0),C=({children:e})=>{const[t,r]=(0,a.useState)(p),[o,n]=(0,a.useState)(!0);(0,a.useEffect)((()=>{(async()=>{try{const e=await x.default.getItem("healthData");e&&r(JSON.parse(e))}catch(e){console.error("Failed to load health data:",e)}finally{n(!1)}})()}),[]);const l=async e=>{try{await x.default.setItem("healthData",JSON.stringify(e)),r(e)}catch(t){console.error("Failed to save health data:",t)}},i={healthData:t,waterIntake:t.waterIntake,stepCounts:t.stepCounts,weights:t.weights,bloodPressures:t.bloodPressures,heartRates:t.heartRates,habits:t.habits,addWaterIntake:async e=>{const r=Object.assign({},t,{waterIntake:[...t.waterIntake,e]});await l(r)},addStepCount:async e=>{const r=Object.assign({},t,{stepCounts:[...t.stepCounts,e]});await l(r)},addWeight:async e=>{const r=Object.assign({},t,{weights:[...t.weights,e]});await l(r)},addBloodPressure:async e=>{const r=Object.assign({},t,{bloodPressures:[...t.bloodPressures,e]});await l(r)},addHeartRate:async e=>{const r=Object.assign({},t,{heartRates:[...t.heartRates,e]});await l(r)},addHabit:async e=>{const r=Object.assign({},t,{habits:[...t.habits,e]});await l(r)},updateHabit:async(e,r)=>{const o=t.habits.map((t=>t.id===e?Object.assign({},t,r):t)),a=Object.assign({},t,{habits:o});await l(a)},deleteHabit:async e=>{const r=t.habits.filter((t=>t.id!==e)),o=Object.assign({},t,{habits:r});await l(o)},toggleHabitCompletion:async(e,r)=>{const o=t.habits.map((t=>{if(t.id===e){const e=t.completedDates||[],o=e.indexOf(r);return o>=0?Object.assign({},t,{completedDates:[...e.slice(0,o),...e.slice(o+1)]}):Object.assign({},t,{completedDates:[...e,r]})}return t})),a=Object.assign({},t,{habits:o});await l(a)},isLoading:o};return(0,b.jsx)(j.Provider,{value:i,children:e})},S=()=>{const e=(0,a.useContext)(j);if(void 0===e)throw new Error("useHealthData must be used within a HealthDataProvider");return e},T=e=>`${e.getFullYear()}-${String(e.getMonth()+1).padStart(2,"0")}-${String(e.getDate()).padStart(2,"0")}`,B=()=>(new Date).toISOString(),w=()=>T(new Date),k=e=>{const t=[],r=new Date;for(let o=0;o<e;o++){const e=new Date(r);e.setDate(r.getDate()-o),t.push(T(e))}return t.reverse()},v=e=>new Date(e).toLocaleDateString("en-US",{weekday:"short",month:"short",day:"numeric"}),D={primary:"#4CAF50",secondary:"#2196F3",background:"#F5F7FA",cardBackground:"#FFFFFF",text:"#333333",textSecondary:"#757575",border:"#E0E0E0",inputBackground:"#F5F5F5",lightGray:"#E0E0E0",white:"#FFFFFF",black:"#000000",success:"#4CAF50",error:"#F44336",warning:"#FF9800",info:"#2196F3",water:"#2196F3",steps:"#8BC34A",weight:"#9C27B0",bloodPressure:"#F44336",heartRate:"#E91E63",habits:"#FF9800"},I=i.default.create({container:{flex:1,padding:16,backgroundColor:D.background},loadingContainer:{flex:1,justifyContent:"center",alignItems:"center",backgroundColor:D.background},loadingText:{marginTop:16,fontSize:16,color:D.textSecondary},title:{fontSize:28,fontWeight:"bold",color:D.primary,textAlign:"center",marginBottom:8},date:{fontSize:16,color:D.textSecondary,textAlign:"center",marginBottom:24},grid:{flexDirection:"row",flexWrap:"wrap",justifyContent:"space-between"},card:{width:"48%",backgroundColor:D.cardBackground,borderRadius:12,padding:16,marginBottom:16,elevation:2},waterCard:{borderTopColor:"#2196F3",borderTopWidth:4},stepsCard:{borderTopColor:"#4CAF50",borderTopWidth:4},weightCard:{borderTopColor:"#9C27B0",borderTopWidth:4},bpCard:{borderTopColor:"#F44336",borderTopWidth:4},heartCard:{borderTopColor:"#E91E63",borderTopWidth:4},habitCard:{borderTopColor:"#FF9800",borderTopWidth:4},cardTitle:{fontSize:14,fontWeight:"bold",color:D.textSecondary,marginBottom:8},cardValue:{fontSize:24,fontWeight:"bold",color:D.text,marginBottom:4},cardSubtitle:{fontSize:12,color:D.textSecondary},habitProgress:{alignItems:"center",justifyContent:"center",marginTop:8},habitCount:{fontSize:24,fontWeight:"bold",color:D.text},habitLabel:{fontSize:12,color:D.textSecondary,marginTop:4},tipsContainer:{backgroundColor:D.cardBackground,borderRadius:12,padding:16,marginBottom:16,elevation:2},tipsTitle:{fontSize:18,fontWeight:"bold",color:D.text,marginBottom:12},tip:{fontSize:14,color:D.text,marginBottom:8,lineHeight:20}}),W=()=>{const e=(0,s.useNavigation)(),{waterIntake:t,stepCounts:r,weights:o,bloodPressures:a,heartRates:n,habits:l,isLoading:i}=S(),d=w(),c=()=>{if(0===o.length)return null;return[...o].sort(((e,t)=>new Date(t.timestamp).getTime()-new Date(e.timestamp).getTime()))[0].value},u=()=>{if(0===n.length)return null;return[...n].sort(((e,t)=>new Date(t.timestamp).getTime()-new Date(e.timestamp).getTime()))[0].bpm},x=()=>l.filter((e=>{const t=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"][new Date(d).getDay()];return e.frequency.includes(t)}));return i?(0,b.jsxs)(h.default,{style:I.loadingContainer,children:[(0,b.jsx)(y.default,{size:"large",color:D.primary}),(0,b.jsx)(g.default,{style:I.loadingText,children:"Loading your health data..."})]}):(0,b.jsxs)(m.default,{style:I.container,children:[(0,b.jsx)(g.default,{style:I.title,children:"Health Genie"}),(0,b.jsx)(g.default,{style:I.date,children:v(d)}),(0,b.jsxs)(h.default,{style:I.grid,children:[(0,b.jsxs)(f.default,{style:[I.card,I.waterCard],onPress:()=>e.navigate("WaterIntake"),children:[(0,b.jsx)(g.default,{style:I.cardTitle,children:"Water"}),(0,b.jsxs)(g.default,{style:I.cardValue,children:[t.filter((e=>e.date===d)).reduce(((e,t)=>e+t.amount),0)," ml"]}),(0,b.jsx)(g.default,{style:I.cardSubtitle,children:"Daily Goal: 2000 ml"})]}),(0,b.jsxs)(f.default,{style:[I.card,I.stepsCard],onPress:()=>e.navigate("StepCount"),children:[(0,b.jsx)(g.default,{style:I.cardTitle,children:"Steps"}),(0,b.jsx)(g.default,{style:I.cardValue,children:(()=>{const e=r.filter((e=>e.date===d));if(0===e.length)return 0;return[...e].sort(((e,t)=>new Date(t.timestamp).getTime()-new Date(e.timestamp).getTime()))[0].count})()}),(0,b.jsx)(g.default,{style:I.cardSubtitle,children:"Daily Goal: 10,000"})]}),(0,b.jsxs)(f.default,{style:[I.card,I.weightCard],onPress:()=>e.navigate("Weight"),children:[(0,b.jsx)(g.default,{style:I.cardTitle,children:"Weight"}),(0,b.jsx)(g.default,{style:I.cardValue,children:c()?`${c()} kg`:"Not set"}),(0,b.jsx)(g.default,{style:I.cardSubtitle,children:"Latest measurement"})]}),(0,b.jsxs)(f.default,{style:[I.card,I.bpCard],onPress:()=>e.navigate("BloodPressure"),children:[(0,b.jsx)(g.default,{style:I.cardTitle,children:"Blood Pressure"}),(0,b.jsx)(g.default,{style:I.cardValue,children:(()=>{if(0===a.length)return null;const e=[...a].sort(((e,t)=>new Date(t.timestamp).getTime()-new Date(e.timestamp).getTime()))[0];return`${e.systolic}/${e.diastolic}`})()||"Not set"}),(0,b.jsx)(g.default,{style:I.cardSubtitle,children:"Latest measurement"})]}),(0,b.jsxs)(f.default,{style:[I.card,I.heartCard],onPress:()=>e.navigate("HeartRate"),children:[(0,b.jsx)(g.default,{style:I.cardTitle,children:"Heart Rate"}),(0,b.jsx)(g.default,{style:I.cardValue,children:u()?`${u()} BPM`:"Not set"}),(0,b.jsx)(g.default,{style:I.cardSubtitle,children:"Latest measurement"})]}),(0,b.jsxs)(f.default,{style:[I.card,I.habitCard],onPress:()=>e.navigate("HabitTracking"),children:[(0,b.jsx)(g.default,{style:I.cardTitle,children:"Habits"}),(0,b.jsxs)(h.default,{style:I.habitProgress,children:[(0,b.jsxs)(g.default,{style:I.habitCount,children:[x().filter((e=>e.completedDates.includes(d))).length,"/",x().length]}),(0,b.jsx)(g.default,{style:I.habitLabel,children:"Completed Today"})]})]})]}),(0,b.jsxs)(h.default,{style:I.tipsContainer,children:[(0,b.jsx)(g.default,{style:I.tipsTitle,children:"Health Tips"}),(0,b.jsx)(g.default,{style:I.tip,children:"\u2022 Drink at least 8 glasses of water daily"}),(0,b.jsx)(g.default,{style:I.tip,children:"\u2022 Aim for 10,000 steps every day"}),(0,b.jsx)(g.default,{style:I.tip,children:"\u2022 Regular heart rate monitoring helps track fitness"}),(0,b.jsx)(g.default,{style:I.tip,children:"\u2022 Monitor blood pressure weekly for heart health"}),(0,b.jsx)(g.default,{style:I.tip,children:"\u2022 Consistency in habits leads to better health outcomes"})]})]})};var R=r(9537),z=r(814);const H=i.default.create({container:{alignItems:"center",marginVertical:16},waterBottle:{width:120,height:220,justifyContent:"center",alignItems:"center",marginBottom:24},bottleOutline:{width:"100%",height:"100%",borderWidth:4,borderColor:D.secondary,borderRadius:20,overflow:"hidden",backgroundColor:"rgba(255, 255, 255, 0.2)",position:"relative"},water:{position:"absolute",bottom:0,left:0,right:0,backgroundColor:"rgba(33, 150, 243, 0.7)",borderRadius:16},cap:{position:"absolute",top:-15,width:40,height:20,backgroundColor:D.secondary,alignSelf:"center",borderRadius:5},contentContainer:{position:"absolute",top:0,left:0,right:0,bottom:0,justifyContent:"center",alignItems:"center"},progressText:{fontSize:28,fontWeight:"bold",color:D.primary},amountText:{fontSize:12,color:D.textSecondary,marginTop:5},infoContainer:{flexDirection:"row",justifyContent:"space-between",width:"100%",paddingHorizontal:16},infoItem:{alignItems:"center"},infoValue:{fontSize:18,fontWeight:"bold",color:D.primary},infoLabel:{fontSize:12,color:D.textSecondary,marginTop:4}}),P=({progress:e,current:t,goal:r})=>{const o=100-100*e+"%";return(0,b.jsxs)(h.default,{style:H.container,children:[(0,b.jsx)(h.default,{style:H.waterBottle,children:(0,b.jsxs)(h.default,{style:H.bottleOutline,children:[(0,b.jsx)(h.default,{style:[H.water,{height:o}]}),(0,b.jsx)(h.default,{style:H.cap}),(0,b.jsxs)(h.default,{style:H.contentContainer,children:[(0,b.jsxs)(g.default,{style:H.progressText,children:[Math.round(100*e),"%"]}),(0,b.jsxs)(g.default,{style:H.amountText,children:[t," / ",r," ml"]})]})]})}),(0,b.jsxs)(h.default,{style:H.infoContainer,children:[(0,b.jsxs)(h.default,{style:H.infoItem,children:[(0,b.jsx)(g.default,{style:H.infoValue,children:t}),(0,b.jsx)(g.default,{style:H.infoLabel,children:"Current (ml)"})]}),(0,b.jsxs)(h.default,{style:H.infoItem,children:[(0,b.jsx)(g.default,{style:H.infoValue,children:r}),(0,b.jsx)(g.default,{style:H.infoLabel,children:"Goal (ml)"})]}),(0,b.jsxs)(h.default,{style:H.infoItem,children:[(0,b.jsx)(g.default,{style:H.infoValue,children:r-t}),(0,b.jsx)(g.default,{style:H.infoLabel,children:"Remaining (ml)"})]})]})]})},F=i.default.create({container:{flex:1,padding:16,backgroundColor:D.background},title:{fontSize:24,fontWeight:"bold",color:D.primary,textAlign:"center",marginBottom:20},inputContainer:{backgroundColor:D.cardBackground,borderRadius:8,padding:16,marginBottom:20,elevation:2},label:{fontSize:16,marginBottom:8,color:D.text},input:{height:50,borderWidth:1,borderColor:D.border,borderRadius:8,padding:10,fontSize:16,backgroundColor:D.inputBackground,marginBottom:10},errorText:{color:D.error,marginBottom:10},quickButtons:{flexDirection:"row",justifyContent:"space-between",marginBottom:16},quickButton:{backgroundColor:D.secondary,padding:10,borderRadius:8,flex:1,marginHorizontal:4,alignItems:"center"},quickButtonText:{color:D.white,fontWeight:"bold"},addButton:{backgroundColor:D.primary,padding:15,borderRadius:8,alignItems:"center"},addButtonText:{color:D.white,fontWeight:"bold",fontSize:16},goalContainer:{flexDirection:"row",alignItems:"center",marginBottom:20,backgroundColor:D.cardBackground,borderRadius:8,padding:16,elevation:2},goalInput:{flex:1,height:50,borderWidth:1,borderColor:D.border,borderRadius:8,padding:10,fontSize:16,backgroundColor:D.inputBackground,marginLeft:10},historyContainer:{backgroundColor:D.cardBackground,borderRadius:8,padding:16,marginBottom:20,elevation:2},historyTitle:{fontSize:18,fontWeight:"bold",marginBottom:12,color:D.text},historyItem:{flexDirection:"row",justifyContent:"space-between",borderBottomWidth:1,borderBottomColor:D.border,paddingVertical:12},historyDate:{color:D.textSecondary},historyAmount:{fontWeight:"bold",color:D.primary},emptyText:{textAlign:"center",color:D.textSecondary,marginVertical:20,fontStyle:"italic"}}),A=()=>{const{waterIntake:e,addWaterIntake:t}=S(),[r,o]=(0,a.useState)(""),[n,l]=(0,a.useState)(null),[i,d]=(0,a.useState)("2000"),[s,c]=(0,a.useState)(0);(0,a.useEffect)((()=>{u()}),[e]);const u=()=>{const t=w(),r=e.filter((e=>e.date===t)).reduce(((e,t)=>e+t.amount),0);c(r)},y=()=>[...e].sort(((e,t)=>new Date(t.timestamp).getTime()-new Date(e.timestamp).getTime())).slice(0,5),x=Math.min(s/parseInt(i,10),1);return(0,b.jsxs)(m.default,{style:F.container,children:[(0,b.jsx)(g.default,{style:F.title,children:"Water Intake Tracker"}),(0,b.jsx)(P,{progress:x,current:s,goal:parseInt(i,10)}),(0,b.jsxs)(h.default,{style:F.goalContainer,children:[(0,b.jsx)(g.default,{style:F.label,children:"Daily Goal (ml):"}),(0,b.jsx)(R.default,{style:F.goalInput,value:i,onChangeText:d,keyboardType:"number-pad"})]}),(0,b.jsxs)(h.default,{style:F.inputContainer,children:[(0,b.jsx)(g.default,{style:F.label,children:"Add Water (ml):"}),(0,b.jsx)(R.default,{style:F.input,value:r,onChangeText:o,placeholder:"Enter amount in ml",keyboardType:"number-pad"}),n&&(0,b.jsx)(g.default,{style:F.errorText,children:n}),(0,b.jsxs)(h.default,{style:F.quickButtons,children:[(0,b.jsx)(f.default,{style:F.quickButton,onPress:()=>o("250"),children:(0,b.jsx)(g.default,{style:F.quickButtonText,children:"+250ml"})}),(0,b.jsx)(f.default,{style:F.quickButton,onPress:()=>o("500"),children:(0,b.jsx)(g.default,{style:F.quickButtonText,children:"+500ml"})}),(0,b.jsx)(f.default,{style:F.quickButton,onPress:()=>o("1000"),children:(0,b.jsx)(g.default,{style:F.quickButtonText,children:"+1L"})})]}),(0,b.jsx)(f.default,{style:F.addButton,onPress:()=>{const e=(e=>{const t=parseFloat(e);return isNaN(t)?"Please enter a valid number":t<=0?"Water intake must be greater than 0":t>1e4?"Water intake cannot exceed 10 liters (10,000 ml)":null})(r);if(e)return void l(e);const a=parseFloat(r),n=w(),i=B();t({id:`water-${i}`,amount:a,date:n,timestamp:i}).then((()=>{o(""),l(null),z.default.alert("Success","Water intake added successfully!")})).catch((e=>{z.default.alert("Error","Failed to save water intake."),console.error(e)}))},children:(0,b.jsx)(g.default,{style:F.addButtonText,children:"Add Water Intake"})})]}),(0,b.jsxs)(h.default,{style:F.historyContainer,children:[(0,b.jsx)(g.default,{style:F.historyTitle,children:"Recent Entries"}),y().length>0?y().map(((e,t)=>(0,b.jsxs)(h.default,{style:F.historyItem,children:[(0,b.jsxs)(g.default,{style:F.historyDate,children:[v(e.date)," at ",new Date(e.timestamp).toLocaleTimeString()]}),(0,b.jsxs)(g.default,{style:F.historyAmount,children:[e.amount," ml"]})]},e.id))):(0,b.jsx)(g.default,{style:F.emptyText,children:"No water intake records yet"})]})]})},L=({data:e,goalValue:t,isWeight:r=!1,isHeartRate:o=!1})=>{if(0===e.length)return(0,b.jsx)(h.default,{style:V.emptyContainer,children:(0,b.jsx)(g.default,{style:V.emptyText,children:"No data to display"})});const a=e.map((e=>e.value)),n=1.1*Math.max(...a),l=r&&t&&t<Math.max(...a);return(0,b.jsxs)(h.default,{style:V.container,children:[(0,b.jsxs)(h.default,{style:V.yAxisContainer,children:[(0,b.jsx)(g.default,{style:V.axisText,children:n.toFixed(0)}),(0,b.jsx)(g.default,{style:V.axisText,children:(n/2).toFixed(0)}),(0,b.jsx)(g.default,{style:V.axisText,children:"0"})]}),(0,b.jsxs)(h.default,{style:V.chartContainer,children:[t&&t<=n&&(0,b.jsx)(h.default,{style:[V.goalLine,{bottom:t/n*100+"%",borderColor:l?D.success:D.warning}],children:(0,b.jsxs)(g.default,{style:[V.goalText,{color:l?D.success:D.warning}],children:["Goal: ",t]})}),(0,b.jsx)(h.default,{style:V.barsContainer,children:e.map(((e,a)=>{const l=e.value/n*100,i=(d=e.value,o?d<60?D.secondary:d<=100?D.success:d<=140?D.warning:D.error:r&&t&&d<=t?D.success:D.primary);var d;return(0,b.jsxs)(h.default,{style:V.barWrapper,children:[(0,b.jsx)(h.default,{style:V.barLabelContainer,children:(0,b.jsx)(g.default,{style:V.barValue,children:e.value})}),(0,b.jsx)(h.default,{style:V.barBackground,children:(0,b.jsx)(h.default,{style:[V.bar,{height:`${l}%`,backgroundColor:i}]})}),(0,b.jsx)(g.default,{style:V.barLabel,children:e.label})]},`${e.date}-${a}`)}))}),(0,b.jsx)(h.default,{style:V.xAxis})]})]})},V=i.default.create({container:{height:250,flexDirection:"row",marginVertical:16},emptyContainer:{height:250,justifyContent:"center",alignItems:"center"},emptyText:{color:D.textSecondary,fontStyle:"italic"},yAxisContainer:{width:40,height:"100%",justifyContent:"space-between",alignItems:"flex-end",paddingRight:8,paddingVertical:8},axisText:{fontSize:10,color:D.textSecondary},chartContainer:{flex:1,height:"100%",position:"relative",paddingVertical:8,paddingBottom:20},goalLine:{position:"absolute",left:0,right:0,height:1,borderWidth:1,borderStyle:"dashed"},goalText:{position:"absolute",right:0,top:-16,fontSize:10},barsContainer:{flex:1,flexDirection:"row",justifyContent:"space-around",alignItems:"flex-end",height:"100%"},barWrapper:{flex:1,alignItems:"center",height:"100%"},barLabelContainer:{position:"absolute",top:0,left:0,right:0,alignItems:"center",zIndex:1},barValue:{fontSize:9,color:D.textSecondary},barBackground:{width:"60%",height:"100%",justifyContent:"flex-end"},bar:{width:"100%",borderTopLeftRadius:4,borderTopRightRadius:4},barLabel:{fontSize:10,color:D.textSecondary,marginTop:4},xAxis:{position:"absolute",bottom:20,left:0,right:0,height:1,backgroundColor:D.border}}),N=i.default.create({container:{flex:1,padding:16,backgroundColor:D.background},title:{fontSize:24,fontWeight:"bold",color:D.primary,textAlign:"center",marginBottom:20},progressContainer:{backgroundColor:D.cardBackground,borderRadius:8,padding:16,marginBottom:20,alignItems:"center",elevation:2},progressCircle:{width:150,height:150,borderRadius:75,borderWidth:10,borderColor:D.secondary,justifyContent:"center",alignItems:"center",marginBottom:20},progressText:{fontSize:28,fontWeight:"bold",color:D.primary},progressLabel:{fontSize:14,color:D.textSecondary},progressBar:{width:"100%",height:20,backgroundColor:D.lightGray,borderRadius:10,overflow:"hidden",marginBottom:10},progressFill:{height:"100%",backgroundColor:D.primary},goalText:{fontSize:16,color:D.text},chartContainer:{backgroundColor:D.cardBackground,borderRadius:8,padding:16,marginBottom:20,elevation:2},chartTitle:{fontSize:18,fontWeight:"bold",marginBottom:12,color:D.text},inputContainer:{backgroundColor:D.cardBackground,borderRadius:8,padding:16,marginBottom:20,elevation:2},label:{fontSize:16,marginBottom:8,color:D.text},input:{height:50,borderWidth:1,borderColor:D.border,borderRadius:8,padding:10,fontSize:16,backgroundColor:D.inputBackground,marginBottom:16},errorText:{color:D.error,marginBottom:16},addButton:{backgroundColor:D.primary,padding:15,borderRadius:8,alignItems:"center"},addButtonText:{color:D.white,fontWeight:"bold",fontSize:16},historyContainer:{backgroundColor:D.cardBackground,borderRadius:8,padding:16,marginBottom:20,elevation:2},historyTitle:{fontSize:18,fontWeight:"bold",marginBottom:12,color:D.text},historyItem:{flexDirection:"row",justifyContent:"space-between",borderBottomWidth:1,borderBottomColor:D.border,paddingVertical:12},historyDate:{color:D.textSecondary},historySteps:{fontWeight:"bold",color:D.primary},emptyText:{textAlign:"center",color:D.textSecondary,marginVertical:20,fontStyle:"italic"}}),E=()=>{const{stepCounts:e,addStepCount:t}=S(),[r,o]=(0,a.useState)(""),[n,l]=(0,a.useState)(null),[i,d]=(0,a.useState)("10000"),[s,c]=(0,a.useState)(0);(0,a.useEffect)((()=>{u()}),[e]);const u=()=>{const t=w(),r=e.filter((e=>e.date===t));if(r.length>0){const e=[...r].sort(((e,t)=>new Date(t.timestamp).getTime()-new Date(e.timestamp).getTime()));c(e[0].count)}else c(0)},y=Math.min(s/parseInt(i,10),1),x=k(7).map((t=>{const r=e.filter((e=>e.date===t));if(r.length>0){const e=[...r].sort(((e,t)=>new Date(t.timestamp).getTime()-new Date(e.timestamp).getTime()));return{date:t,value:e[0].count,label:t.split("-")[2]}}return{date:t,value:0,label:t.split("-")[2]}}));return(0,b.jsxs)(m.default,{style:N.container,children:[(0,b.jsx)(g.default,{style:N.title,children:"Step Counter"}),(0,b.jsxs)(h.default,{style:N.progressContainer,children:[(0,b.jsxs)(h.default,{style:N.progressCircle,children:[(0,b.jsx)(g.default,{style:N.progressText,children:s}),(0,b.jsx)(g.default,{style:N.progressLabel,children:"steps today"})]}),(0,b.jsx)(h.default,{style:N.progressBar,children:(0,b.jsx)(h.default,{style:[N.progressFill,{width:100*y+"%"}]})}),(0,b.jsxs)(g.default,{style:N.goalText,children:["Goal: ",i," steps (",Math.round(100*y),"%)"]})]}),(0,b.jsxs)(h.default,{style:N.chartContainer,children:[(0,b.jsx)(g.default,{style:N.chartTitle,children:"Last 7 Days"}),(0,b.jsx)(L,{data:x,goalValue:parseInt(i,10)})]}),(0,b.jsxs)(h.default,{style:N.inputContainer,children:[(0,b.jsx)(g.default,{style:N.label,children:"Daily Goal:"}),(0,b.jsx)(R.default,{style:N.input,value:i,onChangeText:d,keyboardType:"number-pad",placeholder:"Set your daily step goal"}),(0,b.jsx)(g.default,{style:N.label,children:"Current Step Count:"}),(0,b.jsx)(R.default,{style:N.input,value:r,onChangeText:o,keyboardType:"number-pad",placeholder:"Enter today's step count"}),n&&(0,b.jsx)(g.default,{style:N.errorText,children:n}),(0,b.jsx)(f.default,{style:N.addButton,onPress:()=>{const e=(e=>{const t=parseInt(e,10);return isNaN(t)?"Please enter a valid number":t<0?"Step count cannot be negative":t>1e5?"Step count seems too high":null})(r);if(e)return void l(e);const a=parseInt(r,10),n=w(),i=B();t({id:`steps-${i}`,count:a,date:n,timestamp:i}).then((()=>{o(""),l(null),z.default.alert("Success","Step count updated successfully!")})).catch((e=>{z.default.alert("Error","Failed to save step count."),console.error(e)}))},children:(0,b.jsx)(g.default,{style:N.addButtonText,children:"Update Step Count"})})]}),(0,b.jsxs)(h.default,{style:N.historyContainer,children:[(0,b.jsx)(g.default,{style:N.historyTitle,children:"History"}),e.length>0?[...e].sort(((e,t)=>new Date(t.date).getTime()-new Date(e.date).getTime())).slice(0,7).map((e=>(0,b.jsxs)(h.default,{style:N.historyItem,children:[(0,b.jsx)(g.default,{style:N.historyDate,children:v(e.date)}),(0,b.jsxs)(g.default,{style:N.historySteps,children:[e.count," steps"]})]},e.id))):(0,b.jsx)(g.default,{style:N.emptyText,children:"No step count records yet"})]})]})},O=i.default.create({container:{flex:1,padding:16,backgroundColor:D.background},title:{fontSize:24,fontWeight:"bold",color:D.primary,textAlign:"center",marginBottom:20},summaryContainer:{flexDirection:"row",backgroundColor:D.cardBackground,borderRadius:8,padding:16,marginBottom:20,justifyContent:"space-around",elevation:2},summaryItem:{alignItems:"center"},summaryLabel:{fontSize:14,color:D.textSecondary,marginBottom:5},summaryValue:{fontSize:18,fontWeight:"bold",color:D.text},goalInput:{width:80,height:40,borderWidth:1,borderColor:D.border,borderRadius:8,textAlign:"center",fontSize:16,backgroundColor:D.inputBackground},goalReached:{color:D.success},goalNotReached:{color:D.warning},chartContainer:{backgroundColor:D.cardBackground,borderRadius:8,padding:16,marginBottom:20,elevation:2},chartHeader:{flexDirection:"row",justifyContent:"space-between",alignItems:"center",marginBottom:12},chartTitle:{fontSize:18,fontWeight:"bold",color:D.text},timeframeButtons:{flexDirection:"row"},timeframeButton:{paddingHorizontal:12,paddingVertical:6,borderRadius:16,marginLeft:8},timeframeButtonActive:{backgroundColor:D.primary},timeframeText:{color:D.textSecondary},timeframeTextActive:{color:D.white,fontWeight:"bold"},inputContainer:{backgroundColor:D.cardBackground,borderRadius:8,padding:16,marginBottom:20,elevation:2},label:{fontSize:16,marginBottom:8,color:D.text},input:{height:50,borderWidth:1,borderColor:D.border,borderRadius:8,padding:10,fontSize:16,backgroundColor:D.inputBackground,marginBottom:16},noteInput:{height:100,textAlignVertical:"top"},errorText:{color:D.error,marginBottom:16},addButton:{backgroundColor:D.primary,padding:15,borderRadius:8,alignItems:"center"},addButtonText:{color:D.white,fontWeight:"bold",fontSize:16},historyContainer:{backgroundColor:D.cardBackground,borderRadius:8,padding:16,marginBottom:20,elevation:2},historyTitle:{fontSize:18,fontWeight:"bold",marginBottom:12,color:D.text},historyItem:{flexDirection:"row",justifyContent:"space-between",borderBottomWidth:1,borderBottomColor:D.border,paddingVertical:12},historyDate:{color:D.text,fontWeight:"500"},historyNote:{color:D.textSecondary,fontSize:12,marginTop:4,maxWidth:250},historyWeight:{fontWeight:"bold",color:D.primary},emptyText:{textAlign:"center",color:D.textSecondary,marginVertical:20,fontStyle:"italic"}}),q=()=>{const{weights:e,addWeight:t}=S(),[r,o]=(0,a.useState)(""),[n,l]=(0,a.useState)(""),[i,d]=(0,a.useState)(null),[s,c]=(0,a.useState)(""),[u,y]=(0,a.useState)("week");(0,a.useEffect)((()=>{if(e.length>0&&!s){const t=[...e].sort(((e,t)=>new Date(t.timestamp).getTime()-new Date(e.timestamp).getTime()));c((.9*t[0].value).toFixed(1))}}),[e]);const x=(()=>{if(0===e.length)return null;return[...e].sort(((e,t)=>new Date(t.timestamp).getTime()-new Date(e.timestamp).getTime()))[0].value})(),p=(()=>{const t=k("week"===u?7:30),r=new Map;e.forEach((t=>{(!r.has(t.date)||new Date(t.timestamp).getTime()>new Date(e.find((e=>e.date===t.date))?.timestamp||0).getTime())&&r.set(t.date,t.value)}));return t.map((e=>({date:e,value:r.get(e)||0,label:e.split("-")[2]}))).filter((e=>e.value>0))})(),j=null!==x&&""!==s&&x<=parseFloat(s);return(0,b.jsxs)(m.default,{style:O.container,children:[(0,b.jsx)(g.default,{style:O.title,children:"Weight Tracker"}),(0,b.jsxs)(h.default,{style:O.summaryContainer,children:[(0,b.jsxs)(h.default,{style:O.summaryItem,children:[(0,b.jsx)(g.default,{style:O.summaryLabel,children:"Current"}),(0,b.jsx)(g.default,{style:O.summaryValue,children:null!==x?`${x} kg`:"-"})]}),(0,b.jsxs)(h.default,{style:O.summaryItem,children:[(0,b.jsx)(g.default,{style:O.summaryLabel,children:"Goal"}),(0,b.jsx)(R.default,{style:O.goalInput,value:s,onChangeText:c,keyboardType:"numeric",placeholder:"Set goal"})]}),null!==x&&""!==s&&(0,b.jsxs)(h.default,{style:O.summaryItem,children:[(0,b.jsx)(g.default,{style:O.summaryLabel,children:"To Go"}),(0,b.jsx)(g.default,{style:[O.summaryValue,j?O.goalReached:O.goalNotReached],children:j?"Goal reached!":`${(x-parseFloat(s)).toFixed(1)} kg`})]})]}),p.length>0&&(0,b.jsxs)(h.default,{style:O.chartContainer,children:[(0,b.jsxs)(h.default,{style:O.chartHeader,children:[(0,b.jsx)(g.default,{style:O.chartTitle,children:"Weight Trend"}),(0,b.jsxs)(h.default,{style:O.timeframeButtons,children:[(0,b.jsx)(f.default,{style:[O.timeframeButton,"week"===u?O.timeframeButtonActive:null],onPress:()=>y("week"),children:(0,b.jsx)(g.default,{style:"week"===u?O.timeframeTextActive:O.timeframeText,children:"Week"})}),(0,b.jsx)(f.default,{style:[O.timeframeButton,"month"===u?O.timeframeButtonActive:null],onPress:()=>y("month"),children:(0,b.jsx)(g.default,{style:"month"===u?O.timeframeTextActive:O.timeframeText,children:"Month"})})]})]}),(0,b.jsx)(L,{data:p,goalValue:s?parseFloat(s):void 0,isWeight:!0})]}),(0,b.jsxs)(h.default,{style:O.inputContainer,children:[(0,b.jsx)(g.default,{style:O.label,children:"Record Weight (kg):"}),(0,b.jsx)(R.default,{style:O.input,value:r,onChangeText:o,keyboardType:"numeric",placeholder:"Enter your weight in kg"}),i&&(0,b.jsx)(g.default,{style:O.errorText,children:i}),(0,b.jsx)(g.default,{style:O.label,children:"Note (optional):"}),(0,b.jsx)(R.default,{style:[O.input,O.noteInput],value:n,onChangeText:l,placeholder:"Add a note about your weight",multiline:!0}),(0,b.jsx)(f.default,{style:O.addButton,onPress:()=>{const e=(e=>{const t=parseFloat(e);return isNaN(t)?"Please enter a valid number":t<=0?"Weight must be greater than 0":t>500?"Weight seems too high":null})(r);if(e)return void d(e);const a=parseFloat(r),i=w(),s=B();t({id:`weight-${s}`,value:a,date:i,timestamp:s,note:n.trim()||void 0}).then((()=>{o(""),l(""),d(null),z.default.alert("Success","Weight record added successfully!")})).catch((e=>{z.default.alert("Error","Failed to save weight record."),console.error(e)}))},children:(0,b.jsx)(g.default,{style:O.addButtonText,children:"Add Weight Record"})})]}),(0,b.jsxs)(h.default,{style:O.historyContainer,children:[(0,b.jsx)(g.default,{style:O.historyTitle,children:"History"}),e.length>0?[...e].sort(((e,t)=>new Date(t.timestamp).getTime()-new Date(e.timestamp).getTime())).slice(0,10).map((e=>(0,b.jsxs)(h.default,{style:O.historyItem,children:[(0,b.jsxs)(h.default,{children:[(0,b.jsx)(g.default,{style:O.historyDate,children:v(e.date)}),e.note&&(0,b.jsx)(g.default,{style:O.historyNote,children:e.note})]}),(0,b.jsxs)(g.default,{style:O.historyWeight,children:[e.value," kg"]})]},e.id))):(0,b.jsx)(g.default,{style:O.emptyText,children:"No weight records yet"})]})]})},M=i.default.create({container:{flex:1,padding:16,backgroundColor:D.background},title:{fontSize:24,fontWeight:"bold",color:D.primary,textAlign:"center",marginBottom:20},latestContainer:{backgroundColor:D.cardBackground,borderRadius:8,padding:16,marginBottom:20,alignItems:"center",elevation:2},latestTitle:{fontSize:16,color:D.textSecondary,marginBottom:10},readingDisplay:{flexDirection:"row",alignItems:"baseline",marginBottom:5},readingValue:{fontSize:32,fontWeight:"bold",color:D.primary},readingUnit:{fontSize:16,color:D.textSecondary,marginLeft:5},categoryText:{fontSize:18,fontWeight:"bold",marginBottom:5},dateText:{fontSize:14,color:D.textSecondary},chartContainer:{backgroundColor:D.cardBackground,borderRadius:8,padding:16,marginBottom:20,elevation:2},chartTitle:{fontSize:18,fontWeight:"bold",marginBottom:12,color:D.text},rangeItem:{flexDirection:"row",alignItems:"center",marginBottom:8},rangeColor:{width:16,height:16,borderRadius:8,marginRight:10},rangeText:{fontSize:14,color:D.text},inputContainer:{backgroundColor:D.cardBackground,borderRadius:8,padding:16,marginBottom:20,elevation:2},bpInputRow:{flexDirection:"row",justifyContent:"space-between"},bpInputColumn:{flex:1,marginRight:8},label:{fontSize:16,marginBottom:8,color:D.text},input:{height:50,borderWidth:1,borderColor:D.border,borderRadius:8,padding:10,fontSize:16,backgroundColor:D.inputBackground,marginBottom:16},noteInput:{height:100,textAlignVertical:"top"},errorText:{color:D.error,marginBottom:16},addButton:{backgroundColor:D.primary,padding:15,borderRadius:8,alignItems:"center"},addButtonText:{color:D.white,fontWeight:"bold",fontSize:16},historyContainer:{backgroundColor:D.cardBackground,borderRadius:8,padding:16,marginBottom:20,elevation:2},historyTitle:{fontSize:18,fontWeight:"bold",marginBottom:12,color:D.text},historyItem:{flexDirection:"row",justifyContent:"space-between",borderBottomWidth:1,borderBottomColor:D.border,paddingVertical:12},historyDate:{color:D.text,fontWeight:"500"},historyNote:{color:D.textSecondary,fontSize:12,marginTop:4,maxWidth:200},historyValuesContainer:{alignItems:"flex-end"},historyValues:{fontWeight:"bold",color:D.primary,fontSize:16},historyCategory:{fontSize:12,marginTop:2},emptyText:{textAlign:"center",color:D.textSecondary,marginVertical:20,fontStyle:"italic"}}),$=()=>{const{bloodPressures:e,addBloodPressure:t}=S(),[r,o]=(0,a.useState)(""),[n,l]=(0,a.useState)(""),[i,d]=(0,a.useState)(""),[s,c]=(0,a.useState)(null),u=(e,t)=>e<120&&t<80?{category:"Normal",color:D.success}:e>=120&&e<=129&&t<80?{category:"Elevated",color:D.warning}:e>=130&&e<=139||t>=80&&t<=89?{category:"High (Stage 1)",color:D.warning}:e>=140||t>=90?{category:"High (Stage 2)",color:D.error}:e>180||t>120?{category:"Hypertensive Crisis",color:D.error}:{category:"Unknown",color:D.textSecondary},y=0===e.length?null:[...e].sort(((e,t)=>new Date(t.timestamp).getTime()-new Date(e.timestamp).getTime()))[0],x=y?u(y.systolic,y.diastolic):null;return(0,b.jsxs)(m.default,{style:M.container,children:[(0,b.jsx)(g.default,{style:M.title,children:"Blood Pressure Monitor"}),y&&(0,b.jsxs)(h.default,{style:M.latestContainer,children:[(0,b.jsx)(g.default,{style:M.latestTitle,children:"Latest Reading"}),(0,b.jsxs)(h.default,{style:M.readingDisplay,children:[(0,b.jsxs)(g.default,{style:M.readingValue,children:[y.systolic,"/",y.diastolic]}),(0,b.jsx)(g.default,{style:M.readingUnit,children:"mmHg"})]}),(0,b.jsx)(g.default,{style:[M.categoryText,{color:x?.color}],children:x?.category}),(0,b.jsxs)(g.default,{style:M.dateText,children:[v(y.date)," at ",new Date(y.timestamp).toLocaleTimeString()]})]}),(0,b.jsxs)(h.default,{style:M.chartContainer,children:[(0,b.jsx)(g.default,{style:M.chartTitle,children:"Healthy Ranges"}),(0,b.jsxs)(h.default,{style:M.rangeItem,children:[(0,b.jsx)(h.default,{style:[M.rangeColor,{backgroundColor:D.success}]}),(0,b.jsx)(g.default,{style:M.rangeText,children:"Normal: <120/80 mmHg"})]}),(0,b.jsxs)(h.default,{style:M.rangeItem,children:[(0,b.jsx)(h.default,{style:[M.rangeColor,{backgroundColor:D.warning}]}),(0,b.jsx)(g.default,{style:M.rangeText,children:"Elevated: 120-129/<80 mmHg"})]}),(0,b.jsxs)(h.default,{style:M.rangeItem,children:[(0,b.jsx)(h.default,{style:[M.rangeColor,{backgroundColor:D.warning}]}),(0,b.jsx)(g.default,{style:M.rangeText,children:"High (Stage 1): 130-139/80-89 mmHg"})]}),(0,b.jsxs)(h.default,{style:M.rangeItem,children:[(0,b.jsx)(h.default,{style:[M.rangeColor,{backgroundColor:D.error}]}),(0,b.jsx)(g.default,{style:M.rangeText,children:"High (Stage 2): >=140/>=90 mmHg"})]}),(0,b.jsxs)(h.default,{style:M.rangeItem,children:[(0,b.jsx)(h.default,{style:[M.rangeColor,{backgroundColor:D.error}]}),(0,b.jsx)(g.default,{style:M.rangeText,children:"Crisis: >180/>120 mmHg"})]})]}),(0,b.jsxs)(h.default,{style:M.inputContainer,children:[(0,b.jsxs)(h.default,{style:M.bpInputRow,children:[(0,b.jsxs)(h.default,{style:M.bpInputColumn,children:[(0,b.jsx)(g.default,{style:M.label,children:"Systolic (mmHg):"}),(0,b.jsx)(R.default,{style:M.input,value:r,onChangeText:o,keyboardType:"number-pad",placeholder:"120"})]}),(0,b.jsxs)(h.default,{style:M.bpInputColumn,children:[(0,b.jsx)(g.default,{style:M.label,children:"Diastolic (mmHg):"}),(0,b.jsx)(R.default,{style:M.input,value:n,onChangeText:l,keyboardType:"number-pad",placeholder:"80"})]})]}),s&&(0,b.jsx)(g.default,{style:M.errorText,children:s}),(0,b.jsx)(g.default,{style:M.label,children:"Note (optional):"}),(0,b.jsx)(R.default,{style:[M.input,M.noteInput],value:i,onChangeText:d,placeholder:"Add a note about your reading",multiline:!0}),(0,b.jsx)(f.default,{style:M.addButton,onPress:()=>{const e=((e,t)=>{const r=parseInt(e,10),o=parseInt(t,10);return isNaN(r)||isNaN(o)?"Please enter valid numbers":r<=0||o<=0?"Blood pressure values must be greater than 0":r<o?"Systolic should be higher than diastolic":r>300?"Systolic value seems too high":o>200?"Diastolic value seems too high":null})(r,n);if(e)return void c(e);const a=parseInt(r,10),s=parseInt(n,10),u=w(),h=B();t({id:`bp-${h}`,systolic:a,diastolic:s,date:u,timestamp:h,note:i.trim()||void 0}).then((()=>{o(""),l(""),d(""),c(null),z.default.alert("Success","Blood pressure reading added successfully!")})).catch((e=>{z.default.alert("Error","Failed to save blood pressure reading."),console.error(e)}))},children:(0,b.jsx)(g.default,{style:M.addButtonText,children:"Add Blood Pressure Reading"})})]}),(0,b.jsxs)(h.default,{style:M.historyContainer,children:[(0,b.jsx)(g.default,{style:M.historyTitle,children:"History"}),e.length>0?[...e].sort(((e,t)=>new Date(t.timestamp).getTime()-new Date(e.timestamp).getTime())).slice(0,10).map((e=>{const t=u(e.systolic,e.diastolic);return(0,b.jsxs)(h.default,{style:M.historyItem,children:[(0,b.jsxs)(h.default,{children:[(0,b.jsx)(g.default,{style:M.historyDate,children:v(e.date)}),e.note&&(0,b.jsx)(g.default,{style:M.historyNote,children:e.note})]}),(0,b.jsxs)(h.default,{style:M.historyValuesContainer,children:[(0,b.jsxs)(g.default,{style:M.historyValues,children:[e.systolic,"/",e.diastolic]}),(0,b.jsx)(g.default,{style:[M.historyCategory,{color:t.color}],children:t.category})]})]},e.id)})):(0,b.jsx)(g.default,{style:M.emptyText,children:"No blood pressure records yet"})]})]})},G=i.default.create({container:{flex:1,padding:16,backgroundColor:D.background},title:{fontSize:24,fontWeight:"bold",color:D.primary,textAlign:"center",marginBottom:20},latestContainer:{backgroundColor:D.cardBackground,borderRadius:8,padding:16,marginBottom:20,alignItems:"center",elevation:2},latestTitle:{fontSize:16,color:D.textSecondary,marginBottom:10},readingDisplay:{flexDirection:"row",alignItems:"baseline",marginBottom:5},readingValue:{fontSize:42,fontWeight:"bold",color:D.primary},readingUnit:{fontSize:18,color:D.textSecondary,marginLeft:5},categoryText:{fontSize:18,fontWeight:"bold",marginBottom:5},dateText:{fontSize:14,color:D.textSecondary},chartContainer:{backgroundColor:D.cardBackground,borderRadius:8,padding:16,marginBottom:20,elevation:2},chartHeader:{flexDirection:"row",justifyContent:"space-between",alignItems:"center",marginBottom:12},chartTitle:{fontSize:18,fontWeight:"bold",color:D.text},timeframeButtons:{flexDirection:"row"},timeframeButton:{paddingHorizontal:12,paddingVertical:6,borderRadius:16,marginLeft:8},timeframeButtonActive:{backgroundColor:D.primary},timeframeText:{color:D.textSecondary},timeframeTextActive:{color:D.white,fontWeight:"bold"},rangesContainer:{backgroundColor:D.cardBackground,borderRadius:8,padding:16,marginBottom:20,elevation:2},rangesTitle:{fontSize:18,fontWeight:"bold",marginBottom:12,color:D.text},rangeItem:{flexDirection:"row",alignItems:"center",marginBottom:8},rangeColor:{width:16,height:16,borderRadius:8,marginRight:10},rangeText:{fontSize:14,color:D.text},inputContainer:{backgroundColor:D.cardBackground,borderRadius:8,padding:16,marginBottom:20,elevation:2},label:{fontSize:16,marginBottom:8,color:D.text},input:{height:50,borderWidth:1,borderColor:D.border,borderRadius:8,padding:10,fontSize:16,backgroundColor:D.inputBackground,marginBottom:16},noteInput:{height:100,textAlignVertical:"top"},errorText:{color:D.error,marginBottom:16},addButton:{backgroundColor:D.primary,padding:15,borderRadius:8,alignItems:"center"},addButtonText:{color:D.white,fontWeight:"bold",fontSize:16},historyContainer:{backgroundColor:D.cardBackground,borderRadius:8,padding:16,marginBottom:20,elevation:2},historyTitle:{fontSize:18,fontWeight:"bold",marginBottom:12,color:D.text},historyItem:{flexDirection:"row",justifyContent:"space-between",borderBottomWidth:1,borderBottomColor:D.border,paddingVertical:12},historyDate:{color:D.text,fontWeight:"500"},historyNote:{color:D.textSecondary,fontSize:12,marginTop:4,maxWidth:200},historyValuesContainer:{alignItems:"flex-end"},historyValues:{fontWeight:"bold",color:D.primary,fontSize:16},historyCategory:{fontSize:12,marginTop:2},emptyText:{textAlign:"center",color:D.textSecondary,marginVertical:20,fontStyle:"italic"}}),U=()=>{const{heartRates:e,addHeartRate:t}=S(),[r,o]=(0,a.useState)(""),[n,l]=(0,a.useState)(""),[i,d]=(0,a.useState)(null),[s,c]=(0,a.useState)("day"),u=e=>e<60?{category:"Resting",color:D.secondary}:e>=60&&e<=100?{category:"Normal",color:D.success}:e>100&&e<=140?{category:"Elevated",color:D.warning}:{category:"High",color:D.error},y=0===e.length?null:[...e].sort(((e,t)=>new Date(t.timestamp).getTime()-new Date(e.timestamp).getTime()))[0],x=y?u(y.bpm):null,p=(()=>{let t;const r=w();if("day"===s)t=e.filter((e=>e.date===r));else{const r=k(7);t=e.filter((e=>r.includes(e.date)))}return t.sort(((e,t)=>new Date(e.timestamp).getTime()-new Date(t.timestamp).getTime())),t.map((e=>({date:e.date,value:e.bpm,label:"day"===s?new Date(e.timestamp).toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"}):e.date.split("-")[2]})))})();return(0,b.jsxs)(m.default,{style:G.container,children:[(0,b.jsx)(g.default,{style:G.title,children:"Heart Rate Monitor"}),y&&(0,b.jsxs)(h.default,{style:G.latestContainer,children:[(0,b.jsx)(g.default,{style:G.latestTitle,children:"Latest Reading"}),(0,b.jsxs)(h.default,{style:G.readingDisplay,children:[(0,b.jsx)(g.default,{style:G.readingValue,children:y.bpm}),(0,b.jsx)(g.default,{style:G.readingUnit,children:"BPM"})]}),(0,b.jsx)(g.default,{style:[G.categoryText,{color:x?.color}],children:x?.category}),(0,b.jsxs)(g.default,{style:G.dateText,children:[v(y.date)," at ",new Date(y.timestamp).toLocaleTimeString()]})]}),p.length>0&&(0,b.jsxs)(h.default,{style:G.chartContainer,children:[(0,b.jsxs)(h.default,{style:G.chartHeader,children:[(0,b.jsx)(g.default,{style:G.chartTitle,children:"Heart Rate Trend"}),(0,b.jsxs)(h.default,{style:G.timeframeButtons,children:[(0,b.jsx)(f.default,{style:[G.timeframeButton,"day"===s?G.timeframeButtonActive:null],onPress:()=>c("day"),children:(0,b.jsx)(g.default,{style:"day"===s?G.timeframeTextActive:G.timeframeText,children:"Today"})}),(0,b.jsx)(f.default,{style:[G.timeframeButton,"week"===s?G.timeframeButtonActive:null],onPress:()=>c("week"),children:(0,b.jsx)(g.default,{style:"week"===s?G.timeframeTextActive:G.timeframeText,children:"Week"})})]})]}),(0,b.jsx)(L,{data:p,isHeartRate:!0})]}),(0,b.jsxs)(h.default,{style:G.rangesContainer,children:[(0,b.jsx)(g.default,{style:G.rangesTitle,children:"Heart Rate Ranges"}),(0,b.jsxs)(h.default,{style:G.rangeItem,children:[(0,b.jsx)(h.default,{style:[G.rangeColor,{backgroundColor:D.secondary}]}),(0,b.jsx)(g.default,{style:G.rangeText,children:"Resting: <60 BPM"})]}),(0,b.jsxs)(h.default,{style:G.rangeItem,children:[(0,b.jsx)(h.default,{style:[G.rangeColor,{backgroundColor:D.success}]}),(0,b.jsx)(g.default,{style:G.rangeText,children:"Normal: 60-100 BPM"})]}),(0,b.jsxs)(h.default,{style:G.rangeItem,children:[(0,b.jsx)(h.default,{style:[G.rangeColor,{backgroundColor:D.warning}]}),(0,b.jsx)(g.default,{style:G.rangeText,children:"Elevated: 101-140 BPM"})]}),(0,b.jsxs)(h.default,{style:G.rangeItem,children:[(0,b.jsx)(h.default,{style:[G.rangeColor,{backgroundColor:D.error}]}),(0,b.jsx)(g.default,{style:G.rangeText,children:"High: >140 BPM"})]})]}),(0,b.jsxs)(h.default,{style:G.inputContainer,children:[(0,b.jsx)(g.default,{style:G.label,children:"Heart Rate (BPM):"}),(0,b.jsx)(R.default,{style:G.input,value:r,onChangeText:o,keyboardType:"number-pad",placeholder:"Enter beats per minute"}),i&&(0,b.jsx)(g.default,{style:G.errorText,children:i}),(0,b.jsx)(g.default,{style:G.label,children:"Note (optional):"}),(0,b.jsx)(R.default,{style:[G.input,G.noteInput],value:n,onChangeText:l,placeholder:"Add a note about your reading (e.g., after exercise)",multiline:!0}),(0,b.jsx)(f.default,{style:G.addButton,onPress:()=>{const e=(e=>{const t=parseInt(e,10);return isNaN(t)?"Please enter a valid number":t<=0?"Heart rate must be greater than 0":t>250?"Heart rate seems too high":null})(r);if(e)return void d(e);const a=parseInt(r,10),i=w(),s=B();t({id:`hr-${s}`,bpm:a,date:i,timestamp:s,note:n.trim()||void 0}).then((()=>{o(""),l(""),d(null),z.default.alert("Success","Heart rate reading added successfully!")})).catch((e=>{z.default.alert("Error","Failed to save heart rate reading."),console.error(e)}))},children:(0,b.jsx)(g.default,{style:G.addButtonText,children:"Add Heart Rate Reading"})})]}),(0,b.jsxs)(h.default,{style:G.historyContainer,children:[(0,b.jsx)(g.default,{style:G.historyTitle,children:"History"}),e.length>0?[...e].sort(((e,t)=>new Date(t.timestamp).getTime()-new Date(e.timestamp).getTime())).slice(0,10).map((e=>{const t=u(e.bpm);return(0,b.jsxs)(h.default,{style:G.historyItem,children:[(0,b.jsxs)(h.default,{children:[(0,b.jsxs)(g.default,{style:G.historyDate,children:[v(e.date)," at ",new Date(e.timestamp).toLocaleTimeString()]}),e.note&&(0,b.jsx)(g.default,{style:G.historyNote,children:e.note})]}),(0,b.jsxs)(h.default,{style:G.historyValuesContainer,children:[(0,b.jsxs)(g.default,{style:G.historyValues,children:[e.bpm," BPM"]}),(0,b.jsx)(g.default,{style:[G.historyCategory,{color:t.color}],children:t.category})]})]},e.id)})):(0,b.jsx)(g.default,{style:G.emptyText,children:"No heart rate records yet"})]})]})};var _=r(1139);const J=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],Y=i.default.create({container:{flex:1,padding:16,backgroundColor:D.background},title:{fontSize:24,fontWeight:"bold",color:D.primary,textAlign:"center",marginBottom:20},weekContainer:{flexDirection:"row",backgroundColor:D.cardBackground,borderRadius:8,padding:10,marginBottom:16,elevation:2},weekDay:{flex:1,alignItems:"center"},weekDayText:{fontWeight:"bold",color:D.text},habitsContainer:{flex:1,marginBottom:16},habitItem:{backgroundColor:D.cardBackground,borderRadius:8,padding:16,marginBottom:16,borderLeftWidth:5,elevation:2},habitHeader:{flexDirection:"row",justifyContent:"space-between",alignItems:"center",marginBottom:8},habitName:{fontSize:18,fontWeight:"bold",color:D.text,flex:1},habitActions:{flexDirection:"row"},actionButton:{paddingHorizontal:8,paddingVertical:4,borderRadius:4,marginLeft:8},editButton:{backgroundColor:D.secondary},deleteButton:{backgroundColor:D.error},actionButtonText:{color:D.white,fontSize:12},habitDescription:{color:D.textSecondary,marginBottom:8},habitFrequency:{flexDirection:"row",marginBottom:12},frequencyLabel:{color:D.text,fontWeight:"500"},frequencyDays:{color:D.textSecondary},completionGrid:{flexDirection:"row",justifyContent:"space-between"},completionCell:{width:36,height:36,borderRadius:18,borderWidth:1,borderColor:D.border,justifyContent:"center",alignItems:"center",backgroundColor:D.inputBackground},completionCellDisabled:{opacity:.3},completionCellCompleted:{backgroundColor:D.success,borderColor:D.success},completionCellText:{fontSize:12,color:D.text},emptyText:{textAlign:"center",color:D.textSecondary,marginVertical:30,fontStyle:"italic"},addButton:{backgroundColor:D.primary,padding:15,borderRadius:8,alignItems:"center"},addButtonText:{color:D.white,fontWeight:"bold",fontSize:16},modalContainer:{flex:1,justifyContent:"center",alignItems:"center",backgroundColor:"rgba(0, 0, 0, 0.5)"},modalContent:{backgroundColor:D.cardBackground,borderRadius:8,padding:20,width:"90%",maxHeight:"80%"},modalTitle:{fontSize:20,fontWeight:"bold",color:D.primary,marginBottom:16,textAlign:"center"},label:{fontSize:16,marginBottom:8,color:D.text},input:{height:50,borderWidth:1,borderColor:D.border,borderRadius:8,padding:10,fontSize:16,backgroundColor:D.inputBackground,marginBottom:16},textArea:{height:100,textAlignVertical:"top"},daysContainer:{flexDirection:"row",flexWrap:"wrap",marginBottom:16},dayButton:{paddingHorizontal:12,paddingVertical:8,borderRadius:16,borderWidth:1,borderColor:D.border,marginRight:8,marginBottom:8},dayButtonSelected:{backgroundColor:D.primary,borderColor:D.primary},dayButtonText:{color:D.text},dayButtonTextSelected:{color:D.white},colorsContainer:{flexDirection:"row",marginBottom:16},colorOption:{width:30,height:30,borderRadius:15,marginRight:10},colorOptionSelected:{borderWidth:2,borderColor:D.text},errorText:{color:D.error,marginBottom:16},modalButtons:{flexDirection:"row",justifyContent:"space-between"},modalButton:{flex:1,padding:15,borderRadius:8,alignItems:"center",marginHorizontal:5},cancelButton:{backgroundColor:D.textSecondary},saveButton:{backgroundColor:D.primary},modalButtonText:{color:D.white,fontWeight:"bold",fontSize:16}}),K=()=>{const{habits:e,addHabit:t,updateHabit:r,deleteHabit:o,toggleHabitCompletion:n}=S(),[l,i]=(0,a.useState)(""),[d,s]=(0,a.useState)(""),[c,u]=(0,a.useState)([]),[y,x]=(0,a.useState)(D.primary),[p,j]=(0,a.useState)(null),[C,T]=(0,a.useState)(!1),[B,w]=(0,a.useState)(null),[v,I]=(0,a.useState)(!1),[W,H]=(0,a.useState)([]);(0,a.useEffect)((()=>{H(k(7))}),[]);const P=()=>{i(""),s(""),u([]),x(D.primary),j(null),T(!1),w(null)},F=[D.primary,D.secondary,D.success,D.warning,D.error,"#9C27B0","#2196F3","#607D8B"];return(0,b.jsxs)(h.default,{style:Y.container,children:[(0,b.jsx)(g.default,{style:Y.title,children:"Habit Tracker"}),(0,b.jsx)(h.default,{style:Y.weekContainer,children:J.map((e=>(0,b.jsx)(h.default,{style:Y.weekDay,children:(0,b.jsx)(g.default,{style:Y.weekDayText,children:e})},e)))}),(0,b.jsx)(m.default,{style:Y.habitsContainer,children:e.length>0?e.map((e=>(0,b.jsxs)(h.default,{style:[Y.habitItem,{borderLeftColor:e.color||D.primary}],children:[(0,b.jsxs)(h.default,{style:Y.habitHeader,children:[(0,b.jsx)(g.default,{style:Y.habitName,children:e.name}),(0,b.jsxs)(h.default,{style:Y.habitActions,children:[(0,b.jsx)(f.default,{style:[Y.actionButton,Y.editButton],onPress:()=>(e=>{i(e.name),s(e.description||""),u(e.frequency),x(e.color||D.primary),w(e.id),T(!0),I(!0)})(e),children:(0,b.jsx)(g.default,{style:Y.actionButtonText,children:"Edit"})}),(0,b.jsx)(f.default,{style:[Y.actionButton,Y.deleteButton],onPress:()=>{return t=e.id,void z.default.alert("Delete Habit","Are you sure you want to delete this habit? This action cannot be undone.",[{text:"Cancel",style:"cancel"},{text:"Delete",onPress:()=>{o(t).then((()=>{z.default.alert("Success","Habit deleted successfully!")})).catch((e=>{z.default.alert("Error","Failed to delete habit."),console.error(e)}))},style:"destructive"}]);var t},children:(0,b.jsx)(g.default,{style:Y.actionButtonText,children:"Delete"})})]})]}),e.description&&(0,b.jsx)(g.default,{style:Y.habitDescription,children:e.description}),(0,b.jsxs)(h.default,{style:Y.habitFrequency,children:[(0,b.jsx)(g.default,{style:Y.frequencyLabel,children:"Frequency: "}),(0,b.jsx)(g.default,{style:Y.frequencyDays,children:e.frequency.join(", ")})]}),(0,b.jsx)(h.default,{style:Y.completionGrid,children:W.map(((t,r)=>{const o=new Date(t).getDay();const a=((e,t)=>e.frequency.includes(J[t]))(e,o),l=((e,t)=>e.completedDates.includes(t))(e,t);return(0,b.jsx)(f.default,{style:[Y.completionCell,!a&&Y.completionCellDisabled,a&&l&&Y.completionCellCompleted],onPress:()=>a&&((e,t)=>{n(e,t).catch((e=>{z.default.alert("Error","Failed to update habit completion status."),console.error(e)}))})(e.id,t),disabled:!a,children:(0,b.jsx)(g.default,{style:Y.completionCellText,children:t.split("-")[2]})},t)}))})]},e.id))):(0,b.jsx)(g.default,{style:Y.emptyText,children:'No habits added yet. Create your first habit by tapping the "Add Habit" button below.'})}),(0,b.jsx)(f.default,{style:Y.addButton,onPress:()=>{P(),I(!0)},children:(0,b.jsx)(g.default,{style:Y.addButtonText,children:"Add Habit"})}),(0,b.jsx)(_.default,{visible:v,animationType:"slide",transparent:!0,onRequestClose:()=>I(!1),children:(0,b.jsx)(h.default,{style:Y.modalContainer,children:(0,b.jsxs)(h.default,{style:Y.modalContent,children:[(0,b.jsx)(g.default,{style:Y.modalTitle,children:C?"Edit Habit":"Add New Habit"}),(0,b.jsx)(g.default,{style:Y.label,children:"Habit Name:"}),(0,b.jsx)(R.default,{style:Y.input,value:l,onChangeText:i,placeholder:"Enter habit name"}),(0,b.jsx)(g.default,{style:Y.label,children:"Description (optional):"}),(0,b.jsx)(R.default,{style:[Y.input,Y.textArea],value:d,onChangeText:s,placeholder:"Enter a description",multiline:!0}),(0,b.jsx)(g.default,{style:Y.label,children:"Frequency:"}),(0,b.jsx)(h.default,{style:Y.daysContainer,children:J.map((e=>(0,b.jsx)(f.default,{style:[Y.dayButton,c.includes(e)&&Y.dayButtonSelected],onPress:()=>(e=>{c.includes(e)?u(c.filter((t=>t!==e))):u([...c,e])})(e),children:(0,b.jsx)(g.default,{style:[Y.dayButtonText,c.includes(e)&&Y.dayButtonTextSelected],children:e})},e)))}),(0,b.jsx)(g.default,{style:Y.label,children:"Color:"}),(0,b.jsx)(h.default,{style:Y.colorsContainer,children:F.map((e=>(e=>(0,b.jsx)(f.default,{style:[Y.colorOption,{backgroundColor:e},y===e&&Y.colorOptionSelected],onPress:()=>x(e)},e))(e)))}),p&&(0,b.jsx)(g.default,{style:Y.errorText,children:p}),(0,b.jsxs)(h.default,{style:Y.modalButtons,children:[(0,b.jsx)(f.default,{style:[Y.modalButton,Y.cancelButton],onPress:()=>{P(),I(!1)},children:(0,b.jsx)(g.default,{style:Y.modalButtonText,children:"Cancel"})}),(0,b.jsx)(f.default,{style:[Y.modalButton,Y.saveButton],onPress:()=>{const e=(o=l).trim()?o.length>50?"Habit name is too long (max 50 characters)":null:"Habit name cannot be empty";var o;if(e)return void j(e);if(0===c.length)return void j("Please select at least one day for the habit");const a=(new Date).toISOString();C&&B?r(B,{name:l,description:d.trim()||void 0,frequency:c,color:y}).then((()=>{P(),I(!1),z.default.alert("Success","Habit updated successfully!")})).catch((e=>{z.default.alert("Error","Failed to update habit."),console.error(e)})):t({id:`habit-${a}`,name:l,description:d.trim()||void 0,frequency:c,createdAt:a,completedDates:[],color:y}).then((()=>{P(),I(!1),z.default.alert("Success","Habit added successfully!")})).catch((e=>{z.default.alert("Error","Failed to save habit."),console.error(e)}))},children:(0,b.jsx)(g.default,{style:Y.modalButtonText,children:C?"Update":"Save"})})]})]})})})]})},Q=(0,c.createBottomTabNavigator)(),X=((0,u.createStackNavigator)(),({name:e,focused:t})=>(0,b.jsxs)(h.default,{style:Z.tabIcon,children:[(()=>{switch(e){case"Home":return(0,b.jsx)(h.default,{style:Z.iconCircle,children:(0,b.jsx)(h.default,{style:Z.homeIcon})});case"WaterIntake":return(0,b.jsxs)(h.default,{style:Z.iconCircle,children:[(0,b.jsx)(h.default,{style:Z.waterDropTop}),(0,b.jsx)(h.default,{style:Z.waterDropBottom})]});case"StepCount":return(0,b.jsx)(h.default,{style:Z.iconCircle,children:(0,b.jsxs)(h.default,{style:Z.stepIcon,children:[(0,b.jsx)(h.default,{style:Z.stepLine1}),(0,b.jsx)(h.default,{style:Z.stepLine2})]})});case"Weight":return(0,b.jsx)(h.default,{style:Z.iconCircle,children:(0,b.jsx)(h.default,{style:Z.weightIcon})});case"BloodPressure":return(0,b.jsx)(h.default,{style:Z.iconCircle,children:(0,b.jsx)(h.default,{style:Z.bpIcon})});case"HeartRate":return(0,b.jsx)(h.default,{style:Z.iconCircle,children:(0,b.jsx)(h.default,{style:Z.heartShape})});case"HabitTracking":return(0,b.jsx)(h.default,{style:Z.iconCircle,children:(0,b.jsx)(h.default,{style:Z.habitIcon,children:(0,b.jsx)(h.default,{style:Z.checkmark})})});default:return(0,b.jsx)(h.default,{style:Z.iconCircle})}})(),(0,b.jsx)(g.default,{style:[Z.tabLabel,{color:t?D.primary:D.textSecondary}],children:"WaterIntake"===e?"Water":"StepCount"===e?"Steps":"BloodPressure"===e?"BP":"HeartRate"===e?"Heart":"HabitTracking"===e?"Habits":e})]})),Z=i.default.create({tabIcon:{alignItems:"center",justifyContent:"center"},tabLabel:{fontSize:10,marginTop:2},iconCircle:{width:24,height:24,borderRadius:12,justifyContent:"center",alignItems:"center",overflow:"hidden"},homeIcon:{width:12,height:12,borderWidth:2,borderColor:D.primary,borderRadius:2},waterDropTop:{width:0,height:0,backgroundColor:"transparent",borderStyle:"solid",borderLeftWidth:6,borderRightWidth:6,borderBottomWidth:12,borderLeftColor:"transparent",borderRightColor:"transparent",borderBottomColor:D.primary,transform:[{rotate:"180deg"}]},waterDropBottom:{position:"absolute",bottom:0,width:12,height:6,borderBottomLeftRadius:6,borderBottomRightRadius:6,backgroundColor:D.primary},stepIcon:{width:16,height:16,justifyContent:"center"},stepLine1:{position:"absolute",width:16,height:2,backgroundColor:D.primary,transform:[{rotate:"45deg"}]},stepLine2:{position:"absolute",width:10,height:2,backgroundColor:D.primary,left:-2,bottom:2,transform:[{rotate:"-45deg"}]},weightIcon:{width:16,height:8,borderRadius:4,backgroundColor:D.primary},bpIcon:{width:8,height:16,borderRadius:4,backgroundColor:D.primary},heartShape:{width:10,height:10,backgroundColor:D.primary,borderRadius:5,transform:[{rotate:"45deg"}]},habitIcon:{width:16,height:16,borderWidth:2,borderColor:D.primary,borderRadius:2,justifyContent:"center",alignItems:"center"},checkmark:{width:8,height:5,borderLeftWidth:2,borderBottomWidth:2,borderColor:D.primary,transform:[{rotate:"-45deg"}],marginTop:-2}}),ee=()=>(0,b.jsxs)(Q.Navigator,{screenOptions:({route:e})=>({tabBarIcon:({focused:t})=>(0,b.jsx)(X,{name:e.name,focused:t}),tabBarActiveTintColor:D.primary,tabBarInactiveTintColor:D.textSecondary,tabBarStyle:{height:60,paddingBottom:5,paddingTop:5,backgroundColor:D.cardBackground,borderTopColor:D.border},tabBarLabelStyle:{fontSize:10},headerShown:!1}),children:[(0,b.jsx)(Q.Screen,{name:"Home",component:W,options:{title:"Health Tracker",headerShown:!1}}),(0,b.jsx)(Q.Screen,{name:"WaterIntake",component:A,options:{title:"Water Intake",headerShown:!1}}),(0,b.jsx)(Q.Screen,{name:"StepCount",component:E,options:{title:"Step Counter",headerShown:!1}}),(0,b.jsx)(Q.Screen,{name:"Weight",component:q,options:{title:"Weight Tracker",headerShown:!1}}),(0,b.jsx)(Q.Screen,{name:"BloodPressure",component:$,options:{title:"Blood Pressure",headerShown:!1}}),(0,b.jsx)(Q.Screen,{name:"HeartRate",component:U,options:{title:"Heart Rate",headerShown:!1}}),(0,b.jsx)(Q.Screen,{name:"HabitTracking",component:K,options:{title:"Habit Tracker",headerShown:!1}})]}),te=i.default.create({container:{flex:1}}),re=()=>{const e="dark"===(0,d.default)();return(0,b.jsxs)(n.default,{style:te.container,children:[(0,b.jsx)(l.default,{barStyle:e?"light-content":"dark-content"}),(0,b.jsx)(C,{children:(0,b.jsx)(s.NavigationContainer,{children:(0,b.jsx)(ee,{})})})]})};(0,o.default)(re)}},t={};function r(o){var a=t[o];if(void 0!==a)return a.exports;var n=t[o]={exports:{}};return e[o].call(n.exports,n,n.exports,r),n.exports}r.m=e,(()=>{var e=[];r.O=(t,o,a,n)=>{if(!o){var l=1/0;for(c=0;c<e.length;c++){for(var[o,a,n]=e[c],i=!0,d=0;d<o.length;d++)(!1&n||l>=n)&&Object.keys(r.O).every((e=>r.O[e](o[d])))?o.splice(d--,1):(i=!1,n<l&&(l=n));if(i){e.splice(c--,1);var s=a();void 0!==s&&(t=s)}}return t}n=n||0;for(var c=e.length;c>0&&e[c-1][2]>n;c--)e[c]=e[c-1];e[c]=[o,a,n]}})(),r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var o in t)r.o(t,o)&&!r.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},r.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}(),r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e={792:0};r.O.j=t=>0===e[t];var t=(t,o)=>{var a,n,[l,i,d]=o,s=0;if(l.some((t=>0!==e[t]))){for(a in i)r.o(i,a)&&(r.m[a]=i[a]);if(d)var c=d(r)}for(t&&t(o);s<l.length;s++)n=l[s],r.o(e,n)&&e[n]&&e[n][0](),e[n]=0;return r.O(c)},o=self.webpackChunkweb=self.webpackChunkweb||[];o.forEach(t.bind(null,0)),o.push=t.bind(null,o.push.bind(o))})();var o=r.O(void 0,[751],(()=>r(2934)));o=r.O(o)})();
//# sourceMappingURL=main.3a511c29.js.map